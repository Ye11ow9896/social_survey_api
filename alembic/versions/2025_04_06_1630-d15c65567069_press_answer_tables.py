"""press answer tables

Revision ID: d15c65567069
Revises: 21f0bf3820d1
Create Date: 2025-04-06 16:30:13.142364

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd15c65567069'
down_revision: Union[str, None] = '21f0bf3820d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('question_answer',
    sa.Column('question_text_id', sa.Uuid(), nullable=False),
    sa.Column('question_id', sa.Uuid(), nullable=False),
    sa.Column('telegram_user_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False, comment='Идентификатор записи'),
    sa.ForeignKeyConstraint(['question_id'], ['questionnaire_question.id'], ),
    sa.ForeignKeyConstraint(['question_text_id'], ['question_text.id'], ),
    sa.ForeignKeyConstraint(['telegram_user_id'], ['telegram_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_id', 'telegram_user_id', name='uq_question_id_user_id_question_text_id'),
    comment='Таблица для хранения ответа на вопрос'
    )
    op.drop_table('written_answer')
    op.drop_table('choice_answer')
    op.drop_column('questionnaire_question', 'question_text')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('questionnaire_question', sa.Column('question_text', sa.VARCHAR(), autoincrement=False, nullable=False, comment='Текст вопроса анкеты'))
    op.create_table('choice_answer',
    sa.Column('question_text_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('telegram_user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False, comment='Идентификатор записи'),
    sa.ForeignKeyConstraint(['question_id'], ['questionnaire_question.id'], name='choice_answer_question_id_fkey'),
    sa.ForeignKeyConstraint(['question_text_id'], ['question_text.id'], name='choice_answer_question_text_id_fkey'),
    sa.ForeignKeyConstraint(['telegram_user_id'], ['telegram_user.id'], name='choice_answer_telegram_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='choice_answer_pkey'),
    sa.UniqueConstraint('question_id', 'telegram_user_id', name='uq_question_id_telegram_user_id_question_text_id'),
    comment='Таблица для хранения ответа с выбором(множественным и единственным из нескольких)'
    )
    op.create_table('written_answer',
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False, comment='Текст ответа на вопрос'),
    sa.Column('question_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('telegram_user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False, comment='Идентификатор записи'),
    sa.ForeignKeyConstraint(['question_id'], ['questionnaire_question.id'], name='written_answer_question_id_fkey'),
    sa.ForeignKeyConstraint(['telegram_user_id'], ['telegram_user.id'], name='written_answer_telegram_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='written_answer_pkey'),
    sa.UniqueConstraint('question_id', 'telegram_user_id', name='uq_question_id_telegram_user_id'),
    comment='Таблица для хранения ответа на письменный вопрос'
    )
    op.drop_table('question_answer')
    # ### end Alembic commands ###
